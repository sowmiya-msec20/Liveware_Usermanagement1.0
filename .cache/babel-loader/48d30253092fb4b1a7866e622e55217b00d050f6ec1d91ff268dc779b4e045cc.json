{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\final\\\\final\\\\src\\\\components\\\\AssignTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AssignTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignTask() {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [assignedRole, setAssignedRole] = useState('');\n  const [assignedUserId, setAssignedUserId] = useState(''); // State to store the user ID\n\n  // Function to update assignedUserId when assignedRole or user ID input changes\n  const updateAssignedUserId = () => {\n    if (assignedRole) {\n      axios.get(`https://your-backend-api-url/user-by-role/${assignedRole}`).then(response => {\n        // Assuming the response contains the user's ID\n        setAssignedUserId(response.data.userId);\n      }).catch(error => {\n        console.error('Error fetching user by role:', error);\n      });\n    } else {\n      setAssignedUserId(''); // Clear the assignedUserId if no role is selected\n    }\n  };\n\n  useEffect(updateAssignedUserId, [assignedRole]); // Update when assignedRole changes\n\n  const handleTaskAssignment = () => {\n    // Check if an assigned user ID is available\n    if (assignedUserId) {\n      // Create an object to represent the task details with assignedUserId\n      const taskDetails = {\n        taskName,\n        assignedUserId\n      };\n\n      // Send a POST request to your backend API to store the task in the database\n      axios.post('https://your-backend-api-url/tasks', taskDetails).then(response => {\n        // Task assignment successful, you can handle the response as needed\n        console.log('Task assigned:', response.data);\n      }).catch(error => {\n        // Handle errors, e.g., display an error message\n        console.error('Error assigning task:', error);\n      });\n    } else {\n      // Handle the case where no user ID is found for the assigned role or no user ID input\n      console.error('User ID is missing or not found for the assigned role.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assign-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Assign Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskName,\n          onChange: e => setTaskName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Assign to Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: assignedRole,\n          onChange: e => setAssignedRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user1\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin1\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: assignedUserId,\n          onChange: e => setAssignedUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTaskAssignment,\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(AssignTask, \"zm7MeloTXLgcd2B4dR0bCu3xLDk=\");\n_c = AssignTask;\nexport default AssignTask;\nvar _c;\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AssignTask","_s","taskName","setTaskName","assignedRole","setAssignedRole","assignedUserId","setAssignedUserId","updateAssignedUserId","get","then","response","data","userId","catch","error","console","handleTaskAssignment","taskDetails","post","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/final/final/src/components/AssignTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AssignTask.css';\r\n\r\nfunction AssignTask() {\r\n  const [taskName, setTaskName] = useState('');\r\n  const [assignedRole, setAssignedRole] = useState('');\r\n  const [assignedUserId, setAssignedUserId] = useState(''); // State to store the user ID\r\n\r\n  // Function to update assignedUserId when assignedRole or user ID input changes\r\n  const updateAssignedUserId = () => {\r\n    if (assignedRole) {\r\n      axios.get(`https://your-backend-api-url/user-by-role/${assignedRole}`)\r\n        .then((response) => {\r\n          // Assuming the response contains the user's ID\r\n          setAssignedUserId(response.data.userId);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching user by role:', error);\r\n        });\r\n    } else {\r\n      setAssignedUserId(''); // Clear the assignedUserId if no role is selected\r\n    }\r\n  };\r\n\r\n  useEffect(updateAssignedUserId, [assignedRole]); // Update when assignedRole changes\r\n\r\n  const handleTaskAssignment = () => {\r\n    // Check if an assigned user ID is available\r\n    if (assignedUserId) {\r\n      // Create an object to represent the task details with assignedUserId\r\n      const taskDetails = {\r\n        taskName,\r\n        assignedUserId,\r\n      };\r\n\r\n      // Send a POST request to your backend API to store the task in the database\r\n      axios.post('https://your-backend-api-url/tasks', taskDetails)\r\n        .then((response) => {\r\n          // Task assignment successful, you can handle the response as needed\r\n          console.log('Task assigned:', response.data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle errors, e.g., display an error message\r\n          console.error('Error assigning task:', error);\r\n        });\r\n    } else {\r\n      // Handle the case where no user ID is found for the assigned role or no user ID input\r\n      console.error('User ID is missing or not found for the assigned role.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assign-task\">\r\n      <h3>Assign Task</h3>\r\n      <form>\r\n        <div>\r\n          <label>Task Name:</label>\r\n          <input type=\"text\" value={taskName} onChange={(e) => setTaskName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Assign to Role:</label>\r\n          <select value={assignedRole} onChange={(e) => setAssignedRole(e.target.value)}>\r\n            <option value=\"\">Select Role</option>\r\n            <option value=\"user1\">User</option>\r\n            <option value=\"admin1\">Admin</option>\r\n            {/* Add more role options as needed */}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>User ID:</label>\r\n          <input type=\"text\" value={assignedUserId} onChange={(e) => setAssignedUserId(e.target.value)} />\r\n        </div>\r\n        <button onClick={handleTaskAssignment}>Assign Task</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignTask;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIJ,YAAY,EAAE;MAChBP,KAAK,CAACY,GAAG,CAAE,6CAA4CL,YAAa,EAAC,CAAC,CACnEM,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACAJ,iBAAiB,CAACI,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC;MACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN,CAAC,MAAM;MACLR,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;;EAEDX,SAAS,CAACY,oBAAoB,EAAE,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEjD,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA,IAAIX,cAAc,EAAE;MAClB;MACA,MAAMY,WAAW,GAAG;QAClBhB,QAAQ;QACRI;MACF,CAAC;;MAED;MACAT,KAAK,CAACsB,IAAI,CAAC,oCAAoC,EAAED,WAAW,CAAC,CAC1DR,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACAK,OAAO,CAACI,GAAG,CAAC,gBAAgB,EAAET,QAAQ,CAACC,IAAI,CAAC;MAC9C,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,MAAM;MACL;MACAC,OAAO,CAACD,KAAK,CAAC,wDAAwD,CAAC;IACzE;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKsB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BvB,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzB3B,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAE1B,QAAS;UAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,eACN3B,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9B3B,OAAA;UAAQ6B,KAAK,EAAExB,YAAa;UAACyB,QAAQ,EAAGC,CAAC,IAAKzB,eAAe,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAN,QAAA,gBAC5EvB,OAAA;YAAQ6B,KAAK,EAAC,EAAE;YAAAN,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrC3B,OAAA;YAAQ6B,KAAK,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnC3B,OAAA;YAAQ6B,KAAK,EAAC,QAAQ;YAAAN,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN3B,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvB3B,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEtB,cAAe;UAACuB,QAAQ,EAAGC,CAAC,IAAKvB,iBAAiB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACN3B,OAAA;QAAQiC,OAAO,EAAEf,oBAAqB;QAAAK,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CAzEQD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA2EnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}